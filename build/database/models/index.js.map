{"version":3,"sources":["../../../src/database/models/index.js"],"names":["basename","path","__filename","env","process","NODE_ENV","config","dbConfig","db","sequelize","use_env_variable","Sequelize","database","username","password","fs","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","require","join","DataTypes","name","Object","keys","modelName","associate","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,QAAQ,GAAGC,cAAKD,QAAL,CAAcE,UAAd,CAAjB;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,MAAMC,MAAM,GAAGC,kBAASJ,GAAT,CAAf;AACA,MAAMK,EAAE,GAAG,EAAX;AAGA,IAAIC,SAAJ;;AACA,IAAIH,MAAM,CAACI,gBAAX,EAA6B;AAC3BD,EAAAA,SAAS,GAAG,IAAIE,kBAAJ,CAAcP,OAAO,CAACD,GAAR,CAAYG,MAAM,CAACI,gBAAnB,CAAd,EAAoDJ,MAApD,CAAZ;AACD,CAFD,MAEO;AACLG,EAAAA,SAAS,GAAG,IAAIE,kBAAJ,CAAcL,MAAM,CAACM,QAArB,EAA+BN,MAAM,CAACO,QAAtC,EAAgDP,MAAM,CAACQ,QAAvD,EAAiER,MAAjE,CAAZ;AACD;;AAEDS,YACGC,WADH,CACeC,SADf,EAEGC,MAFH,CAEUC,IAAI,IAAI;AACd,SAAQA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,IAAI,KAAKnB,QAAvC,IAAqDmB,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACD,CAJH,EAKGC,OALH,CAKWH,IAAI,IAAI;AACf,QAAMI,KAAK,GAAGC,OAAO,CAACvB,cAAKwB,IAAL,CAAUR,SAAV,EAAqBE,IAArB,CAAD,CAAP,CAAoCV,SAApC,EAA+CE,mBAAUe,SAAzD,CAAd;;AACAlB,EAAAA,EAAE,CAACe,KAAK,CAACI,IAAP,CAAF,GAAiBJ,KAAjB;AACD,CARH;;AAUAK,MAAM,CAACC,IAAP,CAAYrB,EAAZ,EAAgBc,OAAhB,CAAwBQ,SAAS,IAAI;AACnC,MAAItB,EAAE,CAACsB,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BvB,IAAAA,EAAE,CAACsB,SAAD,CAAF,CAAcC,SAAd,CAAwBvB,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACC,SAAH,GAAeA,SAAf;AACAD,EAAE,CAACG,SAAH,GAAeA,kBAAf;AAEAqB,MAAM,CAACC,OAAP,GAAiBzB,EAAjB","sourcesContent":["'use strict';\n\n/*\nconst fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = require(__dirname + '/../../config/dbConfig.js')[env];\nconst db = {};\n*/\n\nimport fs from 'fs';\nimport path from 'path';\nimport Sequelize from 'sequelize';\nimport dbConfig from '../../config/dbConfig';\n\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = dbConfig[env];\nconst db = {};\n\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(file => {\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n  })\n  .forEach(file => {\n    const model = require(path.join(__dirname, file))(sequelize, Sequelize.DataTypes);\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"],"file":"index.js"}