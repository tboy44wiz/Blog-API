{"version":3,"sources":["../src/app.js"],"names":["dotenv","config","app","use","express","json","urlencoded","extended","req","res","next","header","method","status","get","response","Response","code","routes","PORT","process","env","HOSTNAME","HOST","BASE_URL","listen","console","log"],"mappings":"AAAA;;AAEA;;AACA;;AAEA;;AACA;;;;AAEAA,gBAAOC,MAAP,G,CAEA;;;AACA,MAAMC,GAAG,GAAG,uBAAZ;AAGAA,GAAG,CAACC,GAAJ,CAAQC,iBAAQC,IAAR,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,iBAAQE,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR,E,CAGA;;AACAL,GAAG,CAACC,GAAJ,CAAQ,CAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACxBD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,+DAA3C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,wBAA3C;;AAEA,MAAIH,GAAG,CAACI,MAAJ,KAAe,SAAnB,EAA8B;AAC1BH,IAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,+BAA3C;AACA,WAAOF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB,EAArB,CAAP;AACH;;AACDK,EAAAA,IAAI;AACP,CAVD,E,CAaA;;AACAR,GAAG,CAACY,GAAJ,CAAQ,GAAR,EAAa,CAACN,GAAD,EAAMC,GAAN,KAAc;AACvB,QAAMM,QAAQ,GAAG,IAAIC,iBAAJ,CACb,IADa,EAEb,GAFa,EAGb,sBAHa,CAAjB;AAKAP,EAAAA,GAAG,CAACI,MAAJ,CAAWE,QAAQ,CAACE,IAApB,EAA0BZ,IAA1B,CAA+BU,QAA/B;AACH,CAPD,E,CASA;;AACAb,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBe,eAAnB;AAIA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACA,MAAMG,QAAQ,GAAGF,OAAO,CAACC,GAAR,CAAYE,IAAZ,IAAoB,WAArC;AACA,MAAMC,QAAQ,GAAGJ,OAAO,CAACC,GAAR,CAAYG,QAAZ,IAAyB,UAASF,QAAS,IAAGH,IAAK,EAApE;AAEAjB,GAAG,CAACuB,MAAJ,CAAWN,IAAX,EAAiB,MAAM;AACnBO,EAAAA,OAAO,CAACC,GAAR,CAAa,2CAA0CR,IAAK,kBAAiBK,QAAS,EAAtF;AACH,CAFD","sourcesContent":["'use strict';\n\nimport express  from 'express';\nimport dotenv from 'dotenv';\n\nimport Response from \"./utils/response\";\nimport routes from \"./routes\";\n\ndotenv.config();\n\n//  Set Up Express App.\nconst app = express();\n\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\n\n// To avoid CORS errors, we need to allow some Header accesses as done below\napp.use((req, res, next) => {\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n    res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept, Authorization\");\n    res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');\n\n    if (req.method === \"OPTIONS\") {\n        res.header(\"Access-Control-Allow-Methods\", \"POST, PUT, PATCH, DELETE, GET\");\n        return res.status(200).json({});\n    }\n    next();\n});\n\n\n//  Create a Default or Root Route.\napp.get('/', (req, res) => {\n    const response = new Response(\n        true,\n        200,\n        'Welcome to Blog API.'\n    );\n    res.status(response.code).json(response);\n});\n\n//  Create other Routes.\napp.use('/api/v1', routes);\n\n\n\nconst PORT = process.env.PORT || 5000;\nconst HOSTNAME = process.env.HOST || \"localhost\";\nconst BASE_URL = process.env.BASE_URL || `http://${HOSTNAME}:${PORT}`;\n\napp.listen(PORT, () => {\n    console.log(`==>> Express server is running on port: ${PORT}, kindly visit ${BASE_URL}`);\n});"],"file":"app.js"}