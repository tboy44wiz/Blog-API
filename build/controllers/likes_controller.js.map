{"version":3,"sources":["../../src/controllers/likes_controller.js"],"names":["Likes","models","LikeController","req","res","id","requestPayload","requestBody","body","console","log","error","value","JoiValidator","createLikeSchema","validate","response","Response","message","status","code","json","like","created","findOrCreate","where","blogId","userId","defaults","destroy","likes","findAll","length"],"mappings":"AAAA;;;;;;;AAEA;;AACA;;AAEA;;AACA;;AACA;;;;;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAYC,eAAlB;;AAEA,MAAMC,cAAN,CAAqB;;gBAAfA,c,yBAG2B,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC7C,MAAI;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAASF,GAAG,CAACG,cAAnB;AACA,UAAMC,WAAW,GAAGJ,GAAG,CAACK,IAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,EAAZ,EAJA,CAMA;;AACA,UAAM;AAAEM,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmBC,uBAAaC,gBAAb,CAA8BC,QAA9B,CAAuCR,WAAvC,CAAzB;;AACA,QAAII,KAAJ,EAAW;AACP,YAAMK,QAAQ,GAAG,IAAIC,iBAAJ,CACb,KADa,EAEb,GAFa,EAGZ,GAAEN,KAAK,CAACO,OAAQ,EAHJ,CAAjB;AAKA,aAAOd,GAAG,CAACe,MAAJ,CAAWH,QAAQ,CAACI,IAApB,EAA0BC,IAA1B,CAA+BL,QAA/B,CAAP;AACH,KAfD,CAiBA;;;AACA,UAAM,CAACM,IAAD,EAAOC,OAAP,IAAkB,MAAMvB,KAAK,CAACwB,YAAN,CAAmB;AAC7CC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAEd,KAAK,CAACc,MAAhB;AAAwBC,QAAAA,MAAM,EAAEf,KAAK,CAACe;AAAtC,OADsC;AAE7CC,MAAAA,QAAQ,EAAE,EAAE,GAAGhB;AAAL;AAFmC,KAAnB,CAA9B;;AAKA,QAAI,CAACW,OAAL,EAAc;AAEV;AACA,YAAMvB,KAAK,CAAC6B,OAAN,CAAc;AAAEJ,QAAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAEd,KAAK,CAACc,MAAhB;AAAwBC,UAAAA,MAAM,EAAEf,KAAK,CAACe;AAAtC;AAAT,OAAd,CAAN,CAHU,CAKV;;AACA,YAAMG,KAAK,GAAG,MAAM9B,KAAK,CAAC+B,OAAN,EAApB;AACA,YAAMf,QAAQ,GAAG,IAAIC,iBAAJ,CACb,IADa,EAEb,GAFa,EAGb,6BAHa,EAIb;AAAEa,QAAAA,KAAK,EAAEA,KAAK,CAACE;AAAf,OAJa,CAAjB;AAMA,aAAO5B,GAAG,CAACe,MAAJ,CAAWH,QAAQ,CAACI,IAApB,EAA0BC,IAA1B,CAA+BL,QAA/B,CAAP;AACH,KArCD,CAuCA;;;AACA,UAAMc,KAAK,GAAG,MAAM9B,KAAK,CAAC+B,OAAN,EAApB;AACA,UAAMf,QAAQ,GAAG,IAAIC,iBAAJ,CACb,IADa,EAEb,GAFa,EAGb,0BAHa,EAIb;AAAEa,MAAAA,KAAK,EAAEA,KAAK,CAACE;AAAf,KAJa,CAAjB;AAMA,WAAO5B,GAAG,CAACe,MAAJ,CAAWH,QAAQ,CAACI,IAApB,EAA0BC,IAA1B,CAA+BL,QAA/B,CAAP;AAGH,GAlDD,CAkDE,OAAOL,KAAP,EAAc;AACZF,IAAAA,OAAO,CAACC,GAAR,CAAa,YAAYC,KAAO,EAAhC;AACA,UAAMK,QAAQ,GAAG,IAAIC,iBAAJ,CACb,KADa,EAEb,GAFa,EAGb,uCAHa,CAAjB;AAKAb,IAAAA,GAAG,CAACe,MAAJ,CAAWH,QAAQ,CAACI,IAApB,EAA0BC,IAA1B,CAA+BL,QAA/B;AACH;AACJ,C;;eAIUd,c","sourcesContent":["'use strict';\n\nimport jwt from 'jsonwebtoken'\nimport bcrypt from 'bcryptjs';\n\nimport models from '../database/models';\nimport Response from '../utils/response';\nimport JoiValidator from \"../utils/joi_validator\";\n\nconst { Likes } = models;\n\nclass LikeController {\n\n    //  Create & Delete a Like.\n    static createAndDeleteLike = async (req, res) => {\n        try {\n\n            const { id } = req.requestPayload;\n            const requestBody = req.body;\n            console.log(id);\n\n            //  Validate the Request Body.\n            const { error, value } = JoiValidator.createLikeSchema.validate(requestBody);\n            if (error) {\n                const response = new Response(\n                    false,\n                    400,\n                    `${error.message}`\n                );\n                return res.status(response.code).json(response);\n            }\n\n            //  Create a Like.\n            const [like, created] = await Likes.findOrCreate({\n                where: { blogId: value.blogId, userId: value.userId },\n                defaults: { ...value }\n            });\n            \n            if (!created) {\n\n                //  Delete Like.\n                await Likes.destroy({ where: { blogId: value.blogId, userId: value.userId } });\n\n                //  Get the whole Likes count.\n                const likes = await Likes.findAll();\n                const response = new Response(\n                    true,\n                    201,\n                    \"Blog disliked successfully.\",\n                    { likes: likes.length }\n                );\n                return res.status(response.code).json(response);\n            }\n\n            //  Get the whole Likes count.\n            const likes = await Likes.findAll();\n            const response = new Response(\n                true,\n                201,\n                \"Blog liked successfully.\",\n                { likes: likes.length }\n            );\n            return res.status(response.code).json(response);\n\n\n        } catch (error) {\n            console.log(`ERROR::: ${ error }`);\n            const response = new Response(\n                false,\n                500,\n                \"Server error, please try again later.\"\n            );\n            res.status(response.code).json(response);\n        }\n    }\n}\n\n\nexport default LikeController;"],"file":"likes_controller.js"}